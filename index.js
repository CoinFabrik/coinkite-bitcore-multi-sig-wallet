var coinkite = require('./coinkite');
var bitcore = require('bitcore');
var _ = require('lodash');
var Message = require('bitcore-message');

var keys = [
    {
        //priv in Coinkite's possession
        //m/0: 12MdK9vE8nkEjj5UEz2kyHK9p9JqqMVS4i
        pub: 'xpub661MyMwAqRbcGWgcbzgTxQXHz71cstnhGS54Ho6fRy39EaJFYbQBhUCXJm5wsiZtzAhajJScjJEFaiTSbfcAhbGbC8fKDRwyQz6utFup1UH'
    },
    {
        //cosigner: "3A8897D631-EBDFD1"
        //m/0: 1KavCAxKWgQKbfWGgNhNyB8BZzoWTZA5Xh
        priv: 'xprv9s21ZrQH143K2vQPnZbpt5rdZoVUNsGSkvA5Usxmtf1sKu1hthgvc7U49DeixZHNAwPnQWq9hyCB37SdTddVYwyiEt7m6sJcrLMQp75QcBu',
        pub: 'xpub661MyMwAqRbcFQUrtb8qFDoN7qKxnKzJ895gHGNPSzYrChLrSF1B9unXzWTHXYTcMTZrjsijWnbEJG3QjZ4Qdy9mdc56HQawfqFcVP8VxpW'
    },
    {
        //cosigner: "7EA20DAC2C-48BA4E"
        //m/0: 18aWaxB9h3JQ4pPRtW1wSAknRMNNPsFmdD
        priv: 'xprv9s21ZrQH143K27KwUhjnfmJH4jFZzCEqu1CkJzaa1FM9JexvBrmCxJ87p5VPqY8Uh7495zwyi62HSVCAwDMsL1F8qkFroDPQdiQ6iWdfadL',
        pub: 'xpub661MyMwAqRbcEbQQajGo2uF1cm64PexhGE8M7NzBZat8BTJ4jQ5TW6SbfLfvfXvtViGNdJsrRe3Wkv4Y2ZpnVVPuTDEa3gek96dU5LunXKv'
    }];
var publicKeys;
/**
 * Returns a p2sh address as generated by Coinkite, given the HD public keys. (Derivation path "m/x")
 * @param {Array} hdPublicKeys The xpub strings.
 * @param {int} index The index to be used in the derivation path (The "x" in "m/x").
 * @param {int} requiredSignatures The number of signatures required to spend.
 * @returns {*}
 */
function getReceiveAddress(hdPublicKeys, index, requiredSignatures){
    var derivedPublicKeys = hdPublicKeys.map(function(pubString){
        return (new bitcore.HDPublicKey(pubString))
            .derive('m/' + index)
            .publicKey;
    });
    console.log(derivedPublicKeys.map(function(pub) {
        console.log('public key:' + pub);
        return bitcore.Address.fromPublicKey(pub, bitcore.Networks.livenet);
    }));
    publicKeys = derivedPublicKeys;
    return new bitcore.Address(derivedPublicKeys, requiredSignatures);
}
console.log(bitcore.Address.fromPublicKey(new bitcore.HDPublicKey(keys[2].priv, bitcore.Networks.livenet).publicKey, bitcore.Networks.livenet));
var hdkey = (new bitcore.HDPrivateKey(keys[2].priv, bitcore.Networks.livenet))
    .derive('m/0');
console.log(hdkey.privateKey.toAddress() + '\n' + hdkey.privateKey.toWIF());
console.log('Signature:' + require('./sign').getSignature(hdkey.privateKey, "375030f6a5271727f4c9cebc322e1cf73c979f2dfda226d57dbfbc4b556e4c04"));
var p2shAddress = getReceiveAddress(_.pluck(keys, 'pub'), 0, 2);
console.log(p2shAddress.publicKey);
process.exit();

var t = (new bitcore.Transaction('01000000014cd4a236ac9e78285f17b0b11317703b2e822ed1c2be14c76a285bb14a35abd2' +
    '0100000000ffffffff0230750000000000001976a914bed3809ce1524fbed4833132a580aaf73b19f4a188ac70460d000000000' +
    '017a914ffdf8c0fa0fe0585433bbc3f406a794d8f8c96df8700000000'));
//console.log(t.toObject());
console.log(publicKeys);
t._fromMultisigUtxo({
    address: '3NPfFxSJFJ3vkNHNh2ZxELaAeacTCGmuxA',
    txId: 'd2ab354ab15b286ac714bec2d12e822e3b701713b1b0175f28789eac36a2d44c',
    outputIndex: 1,
    script: bitcore.Script.buildScriptHashOut(bitcore.Script.buildMultisigOut(publicKeys, 2)),
    satoshis: 30000
}, publicKeys, 2);
//console.log(t.toObject());
console.log(t.getSignatures(hdkey.privateKey)[0]);
//t.sign(hdkey.privateKey);
//t = t.from({'txId': 'd2ab354ab15b286ac714bec2d12e822e3b701713b1b0175f28789eac36a2d44c', outputIndex: 1, satoshis: 1000, script: 'OP_DUP ...'});
//console.log(t.sign(hdkey.privateKey));

function callbackGenerico(error, response, body) {
    if (!error && response.statusCode == 200) {
        //var info = JSON.parse(body);
        try {
            console.log(JSON.stringify(body));
        }
        catch(e) {
            console.log(body);
        }
    } else {
        console.log(body);
        console.log(error);
        console.log(response.statusCode);
    }
}
process.exit();
coinkite.request('/v1/co-sign/9B41B8A6FE-4538BE/7EA20DAC2C-48BA4E/sign', 'PUT', {
    signatures: [{
        signature:	'HwvqiIHS3BW4cMoD75+7gmZJXJgxJLPBqeIvlap0CKZMRNvxkerHmSjSe57zhMCV7eMdTsz7KDBt1AiPWVSUsYM=',
        for_hash:	'01000000014cd4a236ac9e78285f17b0b11317703b2e822ed1c2be14c76a285bb14a35abd20100000000ffffffff0230750000000000001976a914bed3809ce1524fbed4833132a580aaf73b19f4a188ac70460d000000000017a914ffdf8c0fa0fe0585433bbc3f406a794d8f8c96df8700000000',
        subkey_path:	'0'
    }]

},callbackGenerico);
//coinkite.request('/v1/co-sign/9B41B8A6FE-4538BE/13B8AE9034-1CC9D9/sign', 'PUT', {},callbackGenerico);

//process.exit();
/*
    coinkite.request('/v1/new/send', 'PUT', {
        amount: '0.0003',
        account: 'coinfabrik',
        dest: '1JPzktin88qmzFJDYEDCDiWFDrBt1vuyi8'
    },callbackGenerico);
*/